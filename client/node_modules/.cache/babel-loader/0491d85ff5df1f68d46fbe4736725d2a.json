{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport '../../firebase';\nimport ShopActionsType from '../shop/shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('Makan nasi sama indomie');\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionsType.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/rfachrur/Documents/testGreenhouse/react-testcommerce/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionsType","fetchCollectionsAsync","console","log","collectionRef","firestore","collection","get","then","snapshot","collectionsMap","convertCollectionsSnapshotToMap","dispatch","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,OAAiB,gBAAjB;AAEA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB;AAEAF,EAAAA,aAAa,CAACG,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,UAAMC,cAAc,GAAGC,+BAA+B,CAACF,QAAD,CAAtD;AACAG,IAAAA,QAAQ,CAACC,uBAAuB,CAACH,cAAD,CAAxB,CAAR;AACD,GAHD,EAGGI,KAHH,CAGSC,KAAK,IAAIH,QAAQ,CAACI,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAH1B;AAID;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMnB,SAAS,CACbC,eAAe,CAACmB,uBADH,EAEblB,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\n\nimport {  } from '../../firebase'\n\nimport ShopActionsType from '../shop/shop.types';\n\nexport function* fetchCollectionsAsync() {\n  yield console.log('Makan nasi sama indomie');\n\n  const collectionRef = firestore.collection('collections');\n  \n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionsType.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}"]},"metadata":{},"sourceType":"module"}